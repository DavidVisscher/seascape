# -*- mode: ruby -*-
# vi: set ft=ruby :

$salt_master_setup = <<-SCRIPT
salt-key -Ay
sleep 20
echo "Refreshing pillar..."
salt '*' saltutil.refresh_pillar
echo "Updating Mine..."
salt '*' mine.update
salt-call state.highstate
usermod -aG wheel vagrant
salt --output=json '*' pkg.upgrade > /tmp/salt_upgrade
SCRIPT



# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|

  config.vm.define "saltmaster", primary: true do |saltmaster|
    saltmaster.vm.box = "centos/8"
    saltmaster.vm.hostname = 'salt.seascape.example'

    saltmaster.vm.provider :libvirt do |libvirt|
      libvirt.cpus = 2
      libvirt.memory = 2048
    end
    
    # Yes, I realise how ugly this is. It's a temporary measure while we're
    # still unable to create deploy keys on github.
    #
    # The keys won't leave your local machine, so it's fine for now.
    # TODO: Future David, get mad at past David for even thinking of doing this.
    # 
    # Once a better solution is found. Remove or modify lines or blocks tagged with UGLY
    saltmaster.vm.provision "file", source: "~/.ssh/id_rsa", destination: "/tmp/github_key" # UGLY

    saltmaster.vm.synced_folder "../salt/", "/srv/salt"
    saltmaster.vm.synced_folder "../pillar/", "/srv/pillar"
    saltmaster.vm.synced_folder "../reactor/", "/srv/reactor"

    saltmaster.vm.provision :salt do |salt|
      salt.install_master = true
      salt.install_type = "stable"
    end
  
    saltmaster.vm.provision "shell", inline: $salt_master_setup
  end

  config.vm.define "elastic0" do |elastic0|
    elastic0.vm.box = "centos/8"
    elastic0.vm.hostname = 'elastic-0.seascape.example'

    elastic0.vm.provider :libvirt do |libvirt|
      libvirt.cpus = 4
      libvirt.memory = 2048
    end

    elastic0.vm.provision :salt do |salt|
      salt.install_master = false
      salt.masterless = false
    end
    
    elastic0.vm.provision "shell", inline: "usermod -aG wheel vagrant"
  end

  config.vm.define "elastic1" do |elastic1|
    elastic1.vm.box = "centos/8"
    elastic1.vm.hostname = 'elastic-1.seascape.example'

    elastic1.vm.provider :libvirt do |libvirt|
      libvirt.cpus = 4
      libvirt.memory = 2048
    end

    elastic1.vm.provision :salt do |salt|
      salt.install_master = false
      salt.masterless = false
    end
    
    elastic1.vm.provision "shell", inline: "usermod -aG wheel vagrant"
  end
  
  config.vm.define "elastic2" do |elastic2|
    elastic2.vm.box = "centos/8"
    elastic2.vm.hostname = 'elastic-2.seascape.example'

    elastic2.vm.provider :libvirt do |libvirt|
      libvirt.cpus = 4
      libvirt.memory = 2048
    end

    elastic2.vm.provision :salt do |salt|
      salt.install_master = false
      salt.masterless = false
    end
    
    elastic2.vm.provision "shell", inline: "usermod -aG wheel vagrant"
  end

end
